## Window manipulations

# Close window
super + x
	bspc  node -c

# Kill window
super + shift + x
	bspc  node -k

# Toggle tiling mode of window
super + shift + t
	{bspc node -t floating && window-placer $(bspc query -T -d | grep -o '"state":"floating"' | wc -l),bspc node -t tiled}

# Force all windows of the desktop to tile
super + ctrl + t
	bspcp tile

# Force all windows of the desktop to float and arrange them
super + ctrl + shift + t
	bspcp float
	
# Toggle fullscreen
super + shift + f 
	bspc node -t {fullscreen,tiled}	

# Try to keep size and position of the selected window
super + o
	bspc node -g private

# Make window sticky
super + i
	bspc node -g sticky

# Lock a window from closing
super + Escape
	bspc node -g locked 


## Window moving and splitting

# Autopresel (split window in its largest dimension)
ctrl + space
	auto-presel
	
# Presel window for splitting in certain direction
alt + ctrl + {a,s,w,d}
	bspc node -p \~{west,south,north,east}

# Presel the desktop for splitting in certain direction
alt + shift + {a,s,w,d}
    bspc node @/ -p \~{west,south,north,east}

# Set splitting ratio of windows
alt + ctrl + {1-9}
	bspc node -o 0.{1-9}
		
# Move current window to largest space or preselected area if there is one.
super + Return
    windowpromoter

# Create a new "master area", splitting the whole desktop instead of just windows.
alt + Return
	bspc node -n @/
	
# Go (Move) to desktop (and focus the monitor that the desktop is located on. Bspwm style)
super + {_,shift + }{1-9,0}
    bspc {desktop -f,node -d} ^{1-9,10}

# Alternative: i3 style behavior (focus nth, desktop of the focused monitor)
#super + {1-9,0}
#	focusdesktopofthismonitor {1-9}
#super + shift + {1-9,0}
#	movetodesktopofthismonitor {1-9,10}

# Another alternative: xmonad style desktops. You have 10 desktops shared between all monitors,
# and focusing a desktop focuses it on the currently focused monitor
#super + {1-9,0}
#	summondesktop.sh {1-9,10}
#super + shift + {1-9,0}
#	bspc node -d ^{1-9,10}

# Select previous / next desktop
super + {q,e}
	bspc desktop -f {prev.occupied,next.occupied} 

# cycle windows
alt + {_,shift + }Tab
    bspc node -f {next,prev}

# Go to specific window
super + Tab
	rofi -show window
	
#Focus windows by direction, works with multihead
super + {a,s,w,d}
    focusmover {west,south,north,east}
super + {Left,Down,Up,Right}
    focusmover {west,south,north,east}
        	
# Move tiled windows 
# Moving out of the screen should move the window to next monitor if possible
super + ctrl + {a,s,w,d}
	windowgrabber {west,south,north,east}
# Different style of movement: transplant into window in chosen direction
super + shift + {a,s,w,d}
	euclid_mover {west,south,north,east}

# Resize windows
super + ctrl + {Left,Down,Up,Right}
	bspwm_resize.sh {west,south,north,east}


## Layout manipulation/desktop level controls

# Toggle monocle mode
super + ctrl + f 
	bspc desktop -l next
	
# Balance tree
super + shift + b
	bspc node @/ -B

# Balance brother node. If you do this on biggest window of the desktop, it usually means balancing all windows with except the biggest.
super + alt + b
	bspc node @brother -B
	
# Undo balancing (equalize windows)
super + ctrl + b
	bspc node @/ -E

# Toggle automatic balancing of windows
alt + b
	euclid_balancer

# Mirror and flip leaves of tree
super + {comma,period}
	bspc node @/ -F {horizontal,vertical}
	
# Rotate leaves of tree
super + shift + {period,comma}
	bspc node @/ -R {90,270}

# Change window gap
super + g
	bspc config -d focused window_gap {$gap,$(($gap+$gap)),$(($gap+$gap+$gap))}

super + button{4,5}
	bspc config -d focused window_gap $((`bspc config -d focused window_gap` {+,-} 2 ))


## Applications

# Triggered by just tapping LEFT super key
super + shift + space
	rofi -show

# Run terminal (urxvt)
super + t
	$TERMINAL

# Run greenclip
super + c
	rofi -modi "clipboard:greenclip print" -show clipboard -run-command '{cmd}'

# Run browser
super + b
	$BROWSER

# Run ranger using urxvt
super + f
	$TERMINAL -name "ranger" -e ranger

# Run htop using urxvt
super + h
    $TERMINAL -name "htop" -e htop

# Screenshots
Print
    flameshot gui

# Volume manipulations
ctrl + KP_Add
	pulseaudio-ctl up
ctrl + KP_Subtract
    pulseaudio-ctl down
ctrl + KP_Enter
    pulseaudio-ctl mute

# Spotify (play-pause or run)
ctrl + KP_Multiply
    if pgrep "spotify" ; then playerctl -p spotify play-pause; else LD_PRELOAD=/usr/lib/libcurl.so.3:/usr/lib/spotifywm.so spotify; fi

# Cool keys
XF86AudioLowerVolume
	volume down
XF86AudioRaiseVolume
	volume up
XF86AudioLowerVolume
	volume down
XF86AudioMute
	volume mute
XF86MonBrightnessDown
    light -U 5 
XF86MonBrightnessUp
    light -A 5
XF86Sleep
	systemctl suspend

# Make sxhkd and bspwm reload its configuration files:
super + shift + Escape
	pkill -USR1 -x sxhkd && bspc wm -r

# Toggle compositing
super + ctrl + space
	{pkill picom ,\
	picom -b }

# Remove receptacles
super + BackSpace
  for i in $(bspc query -N -n .leaf.!window.local); do bspc node $i -k; done
